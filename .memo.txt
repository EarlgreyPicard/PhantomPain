＊StructureRebuiltブランチ


機能の大半がそろったのでここらで整理する。


Board
	表示中のスレが所属する板のオブジェクト

Thread
	表示中のスレのオブジェクト
	Messages
		レス全てのオブジェクト
		Structure
			レスの依存関係情報オブジェクト


**旧クラス関数
Function.prototype.bind = function prototype_bind() {
var $A = Array.from = function prototype_arrayFrom(iterable) {
var $qA = function prototype_quoteArrayFrom(iterable)
Array.prototype.include = function prototype_include(val) {
var $=function prototype_getElementById(id){return document.getElementById(id);}
 function CommonPref_setIdentifier(aThreadURL) {
 function CommonPref_wroteThreadObject(objName, str)
 function CommonPref_readThreadObject(objName)
 function CommonPref_writeGlobalObject(objName, str)
 function CommonPref_readGlobalObject(objName)
 function CommonPref_foreach(objName, proc)
 function Configulator_toggle(t)
 function Configulator_page(aEvent)
 function BoardPane_init()
 function BoardPane_toggle()
 function BoardPane_update()
 function MessageMenu_init()
 function MessageMenu_attach(node)
 function MessageMenu_ResTo(event)
 function MessageMenu_PopupRef(event)
 function MessageMenu_ExtractRef(event)
 function MessageMenu_CreateRefTree(event)
 function MessageMenu_DeleteRefTree(event)
 function MessageMenu_SetBookmark(event)
 function MessageMenu_ResetBookmark(event)
 function MessageMenu_SetPickup(event)
 function MessageMenu_ResetPickup(event)
 function MessageMenu_ToggleHiding(event)
 function MessageMenu_ExtractImages(event)
 function MessageMenu_BeginGear(event)
 function MessageMenu_BeginTracking(event)
 function MessageMenu_EndTracking(event)
 function MessageMenu_PopupTracked(event)
 function Menu_PopupTemplate(e)
 function Menu_JumpToNewMark()
 function Menu_JumpToBookmark()
 function Menu_ResetBookmark()
 function Menu_PopupPickups()
 function Menu_ExpressPickups()
 function Menu_More()
 function Menu_MoreBack()
 function Menu_ToggleAutoMore()
 function Menu_PreviewOutlinks()
 function Menu_ToggleFinder()
 function Menu_ShowViewer()
 function Menu_ToggleNavigationPopup()
 function BoardList_init()
 function BoardList_prepareBoardNames()
 function BoardList_save(list, prefName)
 function BoardList_reloadBoardNameTxt()
 function BoardList_getBoardName(boardId)
 function BoardList_setBoardName(id, name)
 function Thread_init()
 function Thread_openWriteDialog(to)
 function Thread_check()
 function Thread__loadCheck(req, e)
 function Thread__update(status, html)
 function Thread_beginAutoCheck()
 function Thread_endAutoCheck()
 function Thread_toggleAutoCheck()
 function Thread_autocheckTick()
 function Thread_deploy(width)
 function Thread_deployAll()
 function Thread_deployTo(to)
 function Thread_loadFocus(_no)
 function Thread_getNavigation()
 function Thread_isNavigationElement(e)
 function Thread_invokeNavigation(e)
 function Thread_reload(range)
 function Thread_reloadToPrevChapter(w)
 function Thread_reloadToNextChapter(w)
 function Thread_transitToThreadList()
 function Thread_transitToPrevThread()
 function Thread_transitToNextThread()
 function Thread_testNextThread(anchor, node)
 function Thread_setNextThread(href, ud, nodeNo)
 function Thread_saveNextThreadInfo(nextThread)
 function Thread_loadNextThreadInfo(objStr)
 function Thread_searchPrevThread()
 function ThreadMessages_init()
 function ThreadMessages_updateDeployedInfo(e)
 function ThreadMessages_deploy(min, max)
 function ThreadMessages_push(nodes)
 function ThreadMessages_processMessage(node)
 function ThreadMessages_deployNode(node)
 function ThreadMessages_findDeployedNextSibing(no)
 function ThreadMessages_extendAnchor(e)
 function ThreadMessages_replaceStr(e)
 function ThreadMessages_getNode(id, clone)
 function ThreadMessages_foreach(func, includePopup)
 function ThreadMessages_apply(func, filter, includePopup)
 function ThreadMessages_getDeployMode(no)
 function ThreadMessages_isReady(id)
 function ThreadMessages_isDeployed(id)
 function MessageLoader_load(min, max)
 function MessageLoader_loadByAnchorStr(str)
 function MarkerService_init(g,k,m,ma)
 function MarkerService_onStorageChanged(e)
 function MarkerService_isMineStorageDataChanged(key)
 function MarkserService_save()
 function MarkerService_load()
 function MarkerService_refresh(newValue, oldValue)
 function MarkerService_set(no)
 function MarkerService_del(no)
 function MarkerService_isMarked(no)
 function MarkerService_mark()
 function MarkerService_getMarkerClass(node)
 function MarkerService_nodeLoaded(node)
 function MarkerServices_push(service)
 function MarkerServices_nodeLoaded(node)
 function MarkerServices_onStorageChanged(ev)
	Bookmark.init = function Bookmark_init()
	Bookmark.getSaveStr = function Bookmark_getSaveStr()
	Bookmark._add = function Bookmark_add(no)
	Bookmark._del = function Bookmark_del(no)
	Bookmark.refresh = function Bookmark_refresh(newValue, oldValue)
	Bookmark.getMarkerClass = function Bookmark_getMarkerClass(node)
	Bookmark.marked = function Bookmark_marked()
	Bookmark.focus = function Bookmark_focus()
	Pickup.init = function Pickup_init()
	Pickup.getSaveStr = function Pickup_getSaveStr()
	Pickup._add = function Pickup_add(no)
	Pickup._del = function Pickup_del(no)
	Pickup.refresh = function Pickup_refresh(nV, oV)
	Pickup.getMarkerClass = function Pickup_getMarkerClass(node)
	Pickup.marked = function Pickup_marked()
	Tracker.init = function Tracker_init()
	Tracker.getSaveStr = function Tracker_getSaveStr()
	Tracker._add = function Tracker_add(no)
	Tracker._del = function Tracker_del(no)
	Tracker.refresh = function Tracker_refresh(nV, oV)
	Tracker.getMarkerClass = function Tracker_getMarkerClass(node)
	Tracker.getTracker = function Tracker_getTracker(no)
	Tracker.findBlankIndex = function Tracker_findBlankIndex()
 function TrackerEntry_init(index, trip, aid)
 function TrackerEntry_toString()
 function TrackerEntry_update()
 function TrackerEntry_check(no)
 function TrackerEntry_containsId(id)
 function TrackerEntry_containsTrip(trip)
 function TrackerEntry_getTrackingNumbers()
 function MessageStructure_push(node)
 function MessageStructure_getReplyTo(node)
 function URL_init(url)
 function URL_startWith(x)
 function OutlinkPlugins_getOutlinkPlugin(node)
 function OutlinkPlugins_popupPreview(plugin, anchor, ev)
 function OutlinkPlugins_popup(plugin, anchor)
 function OutlinkPlugins_preview(resNode)
 function OutlinkPluginForImage_posivility(href)
 function OutlinkPluginForImage_getPreview(href, onload, isPopup)
 function OutlinkPluginForMovie_posivility(href)
 function OutlinkPluginForMovie_getPreview(href, onload, isPopup)
 function OutlinkPluginForNicoNico_posivility(href)
 function OutlinkPluginForNicoNico_getPreview(href, onload, isPopup)
 function OutlinkPluginFor2ch_posivility(href)
 function OutlinkPluginFor2ch_getPreview(href, onload, isPopup)
 function OutlinkPluginFor2ch_getThreadTitle(aEvent)
 function OutlinkPluginFor2ch_setToNextThread(aEvent)
 function OutlinkPluginForDefault_posivility(href)
 function OutlinkPluginForDefault_getPreview(href, onload)
 function loadManager_push(href, callback)
 function loadManager_begin()
 function loadManager_request(obj)
 function loadmanager_response(obj, status)
	TextLoadManager.syncGet = function TextLoadManager_syncGet(url, enableCache)
	ImageLoadManager.request = function ImageLoadManager_request(obj)
 function ImageThumbnail_init(href)
 function ImageThumbnail_onLoaderResponse(obj)
 function ImageThumbnail_loaded(obj)
 function ImageThumbnail_error(e)
 function ImageThumbnail_ds(w, h)
ImageThumbnailOnClickOverlay.prototype.loaded = function ImageThumbnailOnClickOverlay_loaded(e)
ImageThumbnailOnClickOverlay.prototype.showOverlay = function ImageThumbnailOnClickOverlay_showOverlay()
ImageThumbnailOnClickOverlayFrame.prototype.loaded = function ImageThumbnailOnClickOverlayFrame_loaded(e)
ImageThumbnailOnClickOverlayFrame.prototype.showOverlay = function ImageThumbnailOnClickOverlayFrame_showOverlay()
 function Popup_init(e)
 function Popup_show(content)
 function Popup_checkClose(aEvent)
 function Popup_close()
 function Popup_limitSize(pos)
 function Popup_adjust(pos)
 function Popup_float()
 function Popup_float(dx, dy)
 function Popup_getPopupPos()
 function Popup_getPopupObj(element)
 function Popup_registorChild(popup)
 function Popup_unregistorChild(popup)
 function Popup_isTopLevelPopup(cls)
 function Popup_toTop()
	ResPopup.prototype.init = function ResPopup_init(anchor)
	ResPopup.prototype.popup =  function ResPopup_popup(obj, e, caption)
	GearPopup.prototype.init = function GearPopup_init(enchantElement)
	GearPopup.prototype.changePos = function GearPopup_changePos(e)
	GearPopup.prototype.changeOrigin = function GearPopup_changeOrigin(no)
	GearPopup.prototype.showPopup = function GearPopup_showPopup(no)
	GearPopup.prototype.to = function GearPopup_to(no)
	GearPopup.prototype.step = function GearPopup_step(cnt)
	GearPopup.prototype.getNode = function GearPopup_getNode(no)
 function PopupUtil_toggle(target, content, closeOnMouseLeave, toTopBeforeHide, category)
 function PopupUtil_toggleResPopup(target, ids, closeOnMouseLeave, caption)
 function PopupUtil__onCloseHandler()
 function PopupUtil_isPopup(e)
 function PopupUtil_getPopup(e)
 function Finder_init()
 function Finder_showing()
 function Finder_enterExpressMode()
 function Finder_leaveExpressMode()
 function Finder_express()
 function Finder_expressReffer(no)
 function Finder_expressTracked()
 function Finder_escape(str)
 function Viewer_init()
 function Viewer_enterViewerMode()
 function Viewer_leaveViewerMode()
 function Viewer_cursorHideCheck()
 function Viewer_cursorShow()
 function Viewer__clearContainer()
 function Viewer_home()
 function Viewer_prev()
 function Viewer_next()
 function Viewer_last()
 function Viewer_first()
 function Viewer_toggleAuto()
 function Viewer_beginSlideshow()
 function Viewer_endSlideshow()
 function Viewer_slideshowUpdate()
 function Viewer_errorSkipToNext(index)
 function Viewer_errorSkipToPrev(index)
 function Viewer_showImage(index)
 function Viewer_getStatus()
 function Viewer_showStatus()
 function Viewer_show()
 function Viewer_close()
 function ViewerEntry_init(href)
 function ViewerEntry_addRelation(no)
 function ViewerEntry_getElement()
 function ViewerEntry_loaded(obj)
 function ViewerEntry_prepare()
 function ViewerEntry_release()
 function Notice_init()
 function Notice_add(msg)
 function Util_toNarrowString(src)
 function Util_eval(str, def)
 function Util_isDecendantOf(e, id)
 function Util_getDecendantNode(e, tagName)
 function  Util_getDecendantNodeByClass(e, x, v)
 function Util_isFixedElement(e)
 function Util_getElementPagePos(e)
 function Util_notifyRefreshInternal(e)
 function Util_timestamp(d)
 function MessageUtil_splitResNumbers(str)
 function NodeUtil_resTo(nodeOrNo)
 function NodeUtil_toggleRefferPopup(node, t)
 function NodeUtil_toggleIdPopup(node, t)
 function NodeUtil_expressReffer(nodeOrNo)
 function NodeUtil_closeRefTree(node)
 function NodeUtil_toggleRefTree(node)
 function NodeUtil_openRefTree(node)
 function NodeUtil__openRefTreeEx(from, c)
 function NodeUtil_toggleBookmark(nodeOrNo)
 function NodeUtil_setBookmark(nodeOrNo)
 function NodeUtil_resetBookmark(nodeOrNo)
 function NodeUtil_togglePickup(nodeOrNo)
 function NodeUtil_setPickup(nodeOrNo)
 function NodeUtil_resetPickup(nodeOrNo)
 function NodeUtil_previewLinks(node)
 function NodeUtil_toggleTracking(nodeOrNo)
 function NodeUtil_beginTracking(nodeOrNo)
 function NodeUtil_endTracking(nodeOrNo)
 function NodeUtil_focus(no)
 function NodeUtil_closeIfPopup(node)
 function PopupDragDrop_init(popupContainer, aEvent)
 function PopupDragDrop_drag(aEvent)
 function PopupDragDrop_drop(aEvent)
 function EventHandlers_init()
 function EventHandlers_enter(mode)
 function EventHandlers_leave(mode)
 function EventHandlers_keydown(e)
 function EventHandlers_invokeThreadKeyHandler(e)
 function EventHandlers_invokeViewerKeyHandler(e)
 function EventHandlers_mouseDown(aEvent)
 function EventHandlers_mouseDown(aEvent)
 function EventHandlers_mosueMove(aEvent)
 function EventHandlers_mouseOver(aEvent)
 function EventHandlers_mouseClick(aEvent)
 function EventHandlers_mouseDblClick(e)
 function EventHandlers_mouseWheel(e)
 function EventHandlers_resolveLoadOnWheel(e)
 function EventHandlers_animationStart(aEvent)
 function EventHandlers_animationEnd(aEvent)
 function EventHandlers_aboneImmidiate(aEvent)
String.format = function String_format(p_txt){
String.prototype.format = function StringPrototype_format(){




*Ticket
設定の変更, 保存
メディアビュアーのピックアップ限定
キーアサイン(Alt+Enterで書き込みウィザード、など）
IDもトリップもないとトラッキングの起点にできないようにする（メニューにボタンを表示しない）
pickupのアイコンを☆にしたほうがいいかも
deployされていないノードに対するトラッキングとその解除がちょっと変かも。
Finder.express後にスクロールを一番上に戻す

**PP2にあってPP3にないもの
***実装するもの
	設定の変更
	ロード直後の板一覧表示状態トグル
	ReplaceStr
	名前が数字の人の名前にポイントするとポップアップ
		トラッキングにも適用（これは設定にて不可にもできる）
x	Moreでの新着ロード
		今の新着は既読になる
x		最終確認時刻の表示→Noticeに表示
x	AutoMore(ThreadLoader)
		AutoMore自動開始
		AutoMore時にタブがアクティブでなければずっと新着として追加
	ピックアップ限定のメディアビュー
	youtubeの動画ポップアップ
	スレURLにポイントしたときにタイトルをポップアップ（リンク先スレッド情報）
	レスポップアップが多すぎるときにタブ化
	レスを指定して検索モードを抜ける（抜けた後フォーカスされる）


***実装しないかもしれないもの
	板一覧のドラッグによるサイズ変更
	リンクのURLが長すぎるときに短縮表示
	レスノードに画像などのコンテンツが追加された（または削除された）時に表示位置ができるだけ変わらないように頑張る
	ノード検索で高速化のためにXPATHを使う（CSSセレクタ機能を使うかも）
	メッセージの本体をダブルクリックしたらそこにしおりを挿入/削除
	スタイルシートの設定による変更
	グロ注意
	画像サムネイルの目隠し（モザイク、ブラー、オーバーレイ）
		初期状態
		警告対象（警告レスによるフラグ立て）
	インライン書き込みフォーム（拡張は作らないので、既存拡張（書き込みヘルパー？）でできれば実装する
	アップデート確認(http://chlice.qee.jp/app/upjson.cgi/pp2/checkVersionCallback)
	メディアビューアで表示範囲に関わらず1-1000のデータを全部列挙
	youtube（とニコ）以外の動画のポップアップ
	キーワード/おすすめ2ch(faviconクリックでURLに飛ばすとかその程度)


**形を変えて実装するもの
	メディアビューアのサムネイル
		カタログっぽく表示する


**実装しないもの
	ポップアップのフェード
	タイトルバーを畳む
	アウトリンク発火時のリダイレクト設定
	メールアドレスや日付等に限定した検索
	タイトルバーにスレッドステータス書き込み

**PP2にもないけど実装するもの
	検索モードに入るとき（選択的に）既読レスを全部ロード？
	Twitterに投げる


*マルチスレッド処理の書き方

スレッドの処理を別ファイルに書く。
onmessage = function(event){}として、トリガを受けたときの処理を記載。
それ以外の部分はロード時に実行されると思われる。
event.dataを参照すると、データのやり取りは可能。DOMの操作はできないとの情報があるので
やらないのが無難か。createElementだけなら通る？XMLHTTPRequestは可。
呼び出し元への通知はpostMessage()によって実施。

	onmessage = function(event)
	{
		var dt = event.data;
		for (var i=dt.begins; i<dt.begins+100000 ; i++)
		{
			factorization(i);
		}
		postMessage({code: -1, begins: dt.begins});
	}
	function factorization(n){ ... }

**Worker内で使えるもの
	navigator
	location(ただし読み込みに限る)
	XMLHttpRequest
	タイマ(setTimeout()/clearTimeout()/setInterval()/clearInterval())
	外部スクリプト(importScripts()メソッドを使う)
	他のワーカーを起動

**Worker内で使えないもの
	DOM
	window
	document
	parent

	どうやらDOMオブジェクトを含むオブジェクトですら受け渡せないようなので、
	jsonで渡せる程度のものしか渡せないと考えたほうがよさそう。
	そう考えると、一旦resからjsonデータを抜いてくる必要があって、
	その手間を考えたら最初からjsonで抜いてきてonLoadでdeployしたくなるものの、
	本文のescapeができないのでダメだな。

一方でConcurrent.Thread.jsではタイマでスライシングしているだけなのでDOMの操作も可能。
しかし、マルチスレッド化に期待する効率化（マルチコアCPUでの効率化）は期待できない。
DOMに関わらない重い処理ならWebWorkersがよさそうだが、果たしてそんなものがどれだけあることか。






*基本データ

resDomNode[]
resNode[] 
	これらは常にindexにレス番号を持つ箱。
	初期状態で1001のサイズを持つ。
	resDomNode[n] == nullなら、そのレスは未ロード。
	resDomNode[n] != null かつ resNode == null ならそのレスは未解釈。

ロード後、バックグラウンドでてけとーにXMLHttpRequestしながら未ロードレスを埋めていく。





*要求仕様

**テンプレート
>>1-10のポップアップをするための土台。
resanchorにしておけばOK？

**しおり
**ピックアップ/透明化
**抽出
**画像展開
**More/AutoReload
**新着Notice
**書き込み
**設定


**ポップアップギア
単一レスのポップアップの場合、ギアアイコンが表示される。
ギアアイコン上でホイールゴリゴリするとその前後のレスに内容を変更。
ギアアイコンからフォーカスを外すと、元のレスを表示。

**ついーと
オリジナルのURL+レス番号でツイート。
ページメニューからだと /10-60(l50でなく、表示範囲でn-mを作る）なんかがデフォルト状態、
レスメニューからだと/10(レス番号)がデフォルト状態。どちらもツイートポップアップで変更可能。


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
bbs2chreader スキンの仕様

bbs2chreader 0.1.0 以降からスレッド表示にスキンを利用できるようになりました。
必要なファイル

プロファイルフォルダ/bbs2chreader/skin にスキン名と同じ名前のフォルダをつくり、その中に以下のファイルを作成します。
Header.html Footer.html

スレッド表示部分の最初と最後に適用されるファイルです。

次のタグは、適用時に置換されます。

    <THREADNAME/> : スレッドのタイトル (Header.htmlのみ)
    <THREADURL/> : スレッドの URL
    <SKINPATH/> : スキンの URL
    <BOARDURL/> : スレッドの所属する板の URL
    <SERVERURL/> : bbs2chreaderで使っているURL (ver.0.2のbbs2ch:threadに相当 / ver.0.3.0以降)
    <FONTNAME/> : フォントの名前 (ver.0.4pre2以降)
    <FONTSIZE/> : フォントのサイズ (ver0.4pre2以降)
    <AAFONTNAME/> : AA表示に使うフォントの名前 (ver.0.4.1以降)
    <AAFONTSIZE/> : AA表示に使うフォントのサイズ (ver.0.4.1以降)
    <AALINEHEIGHT/> : AA表示に使う行の高さ (ver.0.5pre2 rev.510以降)
    <STATUS/> : HTTP ステータスなどのスレッド取得情報 (Footer.htmlのみ)
    <GETRESCOUNT/> : 取得したレスの数 (Footer.htmlのみ)
    <NEWRESCOUNT/> : 新着レスの数 (Footer.htmlのみ)
    <ALLRESCOUNT/> : レスの総数 (Footer.htmlのみ)
    <SIZE/> : スレッドのサイズ (バイト単位 / Footer.htmlのみ / ver.0.4pre6以降)
    <SIZEKB/> : スレッドのサイズ (キロバイト単位 / Footer.htmlのみ / ver.0.4pre6以降)

Res.html NewRes.html

Res.html は既読レスに、NewRes.html は新着レスに適用されるファイルです。

    <NUMBER/> : レスの番号
    <PLAINNUMBER/> : レスの番号
    <NAME/> : 名前
    <MAIL/> : メールアドレス
    <MAILNAME/> : <a href="mailto:メールアドレス">名前</a>
    <DATE/> : 投稿日
    <ID/> : 投稿者の ID
    <IDCOLOR/> : ID 固有の CSS カラー (ver 0.2.13以降)
    <IDBACKGROUNDCOLOR/> : <IDCOLOR/> の背景色版(ver 0.2.13以降)
    <BEID/> : 投稿者の BeID
    <MESSAGE/> : レス本文

NewMark.html

既読レスと未読スレの間に適用されます。
諸注意
書き込み用リンク

書き込み用リンクを追加するには、以下のようにします。

<a href="bbs2ch:post:<THREADURL/>">書き込み</a>

スクリプト使用時の注意

置換文字列に、'\' が使われている場合、<script> 外では文字化けを起こしてしまいます。

<button onclick="alert('<NAME/>')">TEST</button>

次の場合は正しく動作します。

<script>
   var name_<PLAINNUMBER/> = '<NAME/>';
</script>
<button onclick="alert(name_<PLAINNUMBER/>)">TEST</button>

スキン標準化プロジェクトとの互換性

bbs2chreader のスキンは スキン標準化プロジェクト の仕様にほぼ準拠していますが、多くの 2ch ブラウザ用スキンは IE コンポーネントに特化しているため、そのままでは動作しないと思われます。
<MESSAGE/> 内の リンク

<MESSAGE/> 内のリンク(a タグ)には、以下のクラス名がつきます。resPointer (レス番リンク)outLink (外部リンク)
<MESSAGE/> 内の AA

<MESSAGE/> 内でAAと判定された部分は、aaResというクラス名を持ったspan要素になります。(ver.0.4.1以降)
<STATUS/> の動作

Footer.html 内に <STATUS/> が存在しない場合、自動的に<p class="info"><STATUS/></p> が追加されます。
<DATE/> の動作

Res.html(NewRes.html) 内に、<DATE/> しか無いときは、日付、ID そして BeID に置換されます。<ID/> や <BEID/> が存在する場合は、日付のみに置換されます。





■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■オリジナル画像のツイートボタンを作る方法
	http://freesoft.tvbok.com/tips/net_tips/blog_twitter_link.html

※画像は自分で用意しましょう。
ここでは作成するリンクの表記方法のみの解説を行っています。

ツイート用のリンク
http://twitter.com/share?count=horizontal&amp;original_referer=http://ブログのURL&amp;text=ツイートするテキスト&amp;url=http://ブログのurl&amp;via=ツイッターID

赤字部分に、TwitterでつぶやきたいURLや言葉を入れ、
自分で画像を用意し、そこに上記リンクを貼り付ければOK。

http://ブログのURL・・・・つぶやきたいURLを記載します
テキスト・・・・ブログ記事のタイトル等を記載します
ツイッターID･･･自分のTwitter IDを記載します（viaとは、「〜〜〜経由」という意味）

こんな場合におすすめ
　　・好きな画像でツイートボタンを作りたい
　　・余分なアクセスを減らし、少しでも高速に表示させたい


■Twitterで用意された方法1

iframeを利用した方法です。

ツイート用のリンク
<iframe allowtransparency="true" frameborder="0" scrolling="no"
src="http://platform.twitter.com/widgets/tweet_button.html?url=http://ブログのURL
&amp;text=ツイートするテキスト
&amp;via=ツイッターID&amp;lang=en&amp;count=horizontal"style="width:130px; height:20px;"></iframe>

こちらも赤字部分に、TwitterでつぶやきたいURLや言葉と入れればOKです。

こんな場合におすすめ
　　・ツイート数も表示させたい
